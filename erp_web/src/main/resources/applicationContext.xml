<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.cache.annotation.EnableCaching" />
    </context:component-scan>


    <!--<import resource="classpath:/mybatis/**/*Mapper.xml" />-->

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources">
            <list>
                <value>classpath:/project.yml</value>
            </list>
        </property>
        <property name="resolutionMethod" value="FIRST_FOUND"/>
    </bean>

    <context:property-placeholder properties-ref="propertyConfigurer"/>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000"/><!--慢sql日志记录 10秒-->
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/><!--合并重复sql-->
    </bean>
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false"/>
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://${jdbc.host}/${jdbc.database}?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="1000"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,log4j"/>
        <!--配置监控日志-->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="transactionInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <!-- 读操作 -->
                <prop key="query*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="find*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="get*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="load*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="count*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="list*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="check*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="qry*">PROPAGATION_SUPPORTS,-Exception</prop>
                <prop key="select*">PROPAGATION_SUPPORTS,-Exception</prop>
                <!-- 写操作 -->
                <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="upd*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="creat*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="edit*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="gain*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="onlineDb*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="trxqry*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="credit*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="debit*">PROPAGATION_REQUIRED,-Exception</prop>

                <prop key="*">PROPAGATION_SUPPORTS,-Exception</prop>

            </props>
        </property>
    </bean>

    <!-- 根据Name匹配拦截器 -->
    <bean
            class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Service</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <!-- 事务管理的Interceptor -->
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- 本项目数据源代码-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="configLocation" value="classpath:/SqlMapConfig.xml"/>
        <!-- 通配符指定Mapper.xml -->
        <property name="mapperLocations">
            <list>
                <value>classpath*:/mybatis/**/*Mapper.xml</value>
                <value>classpath*:com/**/*Mapper.xml</value>
            </list>
        </property>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage"
                  value="com.inxedu.os.edu.entity,com.inxedu.os.app.entity,com.inxedu.os.exam.entity,com.inxedu.os.gro.entity"/>

        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
                    <!-- 指定数据库方言 -->
                    <property name="dialectType" value="mysql"/>
                </bean>
                <!-- 如需要开启其他插件，可配置于此 -->
            </array>
        </property>

        <!-- MP 全局配置注入 -->
        <property name="globalConfig" ref="globalConfig"/>

    </bean>
    <!-- DAO接口所在包名，Spring会自动查找对应包及其子包下的所有映射接口类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.inxedu.os.edu.mapper,com.inxedu.os.exam.mapper,com.inxedu.os.app.dao,com.inxedu.os.gro.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 定义 MP 全局策略 -->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 主键策略配置 -->
        <!-- 可选参数
            AUTO->`0`("数据库ID自增")
            INPUT->`1`(用户输入ID")
            ID_WORKER->`2`("全局唯一ID")
            UUID->`3`("全局唯一ID")
        -->
        <property name="idType" value="0"/>

        <!-- 数据库类型配置 -->
        <!-- 可选参数（默认mysql）
            MYSQL->`mysql`
            ORACLE->`oracle`
            DB2->`db2`
            H2->`h2`
            HSQL->`hsql`
            SQLITE->`sqlite`
            POSTGRE->`postgresql`
            SQLSERVER2005->`sqlserver2005`
            SQLSERVER->`sqlserver`
        -->
        <property name="dbType" value="mysql"/>

        <!-- 全局表为下划线命名设置 true -->
        <property name="dbColumnUnderline" value="true"/>
    </bean>

    <bean id="sqlSessionMain" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

</beans>
